<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.crm.settings.basic.mapper.XmLoginhistoryMapper" >
  <resultMap id="BaseResultMap" type="com.crm.model.XmLoginhistory" >
    <id column="login_id" property="loginId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_ip" property="userIp" jdbcType="VARCHAR" />
    <result column="logout_time" property="logoutTime" jdbcType="TIMESTAMP" />
    <result column="login_time" property="loginTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    login_id, user_name, user_ip, logout_time, login_time, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from xm_loginhistory
    where login_id = #{loginId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from xm_loginhistory
    where login_id = #{loginId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.crm.model.XmLoginhistory" >
    insert into xm_loginhistory (login_id, user_name, user_ip, 
      logout_time, login_time, status
      )
    values (#{loginId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userIp,jdbcType=VARCHAR}, 
      #{logoutTime,jdbcType=TIMESTAMP}, #{loginTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.crm.model.XmLoginhistory" >
    insert into xm_loginhistory
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="loginId != null" >
        login_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userIp != null" >
        user_ip,
      </if>
      <if test="logoutTime != null" >
        logout_time,
      </if>
      <if test="loginTime != null" >
        login_time,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="loginId != null" >
        #{loginId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userIp != null" >
        #{userIp,jdbcType=VARCHAR},
      </if>
      <if test="logoutTime != null" >
        #{logoutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginTime != null" >
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.crm.model.XmLoginhistory" >
    update xm_loginhistory
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userIp != null" >
        user_ip = #{userIp,jdbcType=VARCHAR},
      </if>
      <if test="logoutTime != null" >
        logout_time = #{logoutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginTime != null" >
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where login_id = #{loginId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.crm.model.XmLoginhistory" >
    update xm_loginhistory
    set user_name = #{userName,jdbcType=VARCHAR},
      user_ip = #{userIp,jdbcType=VARCHAR},
      logout_time = #{logoutTime,jdbcType=TIMESTAMP},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR}
    where login_id = #{loginId,jdbcType=INTEGER}
  </update>
  <select id="getHistoryByName" resultMap="BaseResultMap" >
  	select * from xm_loginhistory where user_name= #{username} order by login_time desc limit #{start},#{rows}
  </select>
  <select id="getTotalByName" resultType="Integer" >
  	select count(login_id) from xm_loginhistory where user_name= #{username}
  </select>
</mapper>