<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.crm.mapper.module.XmMaillistMapper" >
  <resultMap id="BaseResultMap" type="com.crm.model.XmMaillist" >
    <id column="maillistid" property="maillistid" jdbcType="INTEGER" />
    <result column="maillistname" property="maillistname" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="maillisttitle" property="maillisttitle" jdbcType="VARCHAR" />
    <result column="maillisttype" property="maillisttype" jdbcType="VARCHAR" />
    <result column="queryid" property="queryid" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.crm.model.XmMaillist" extends="BaseResultMap" >
    <result column="maillistmsg" property="maillistmsg" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    maillistid, maillistname, description, maillisttitle, maillisttype, queryid
  </sql>
  <sql id="Blob_Column_List" >
    maillistmsg
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from xm_maillist
    where maillistid = #{maillistid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from xm_maillist
    where maillistid = #{maillistid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.crm.model.XmMaillist" >
    insert into xm_maillist (maillistid, maillistname, description, 
      maillisttitle, maillisttype, queryid, 
      maillistmsg)
    values (#{maillistid,jdbcType=INTEGER}, #{maillistname,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{maillisttitle,jdbcType=VARCHAR}, #{maillisttype,jdbcType=VARCHAR}, #{queryid,jdbcType=INTEGER}, 
      #{maillistmsg,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.crm.model.XmMaillist" >
    insert into xm_maillist
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="maillistid != null" >
        maillistid,
      </if>
      <if test="maillistname != null" >
        maillistname,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="maillisttitle != null" >
        maillisttitle,
      </if>
      <if test="maillisttype != null" >
        maillisttype,
      </if>
      <if test="queryid != null" >
        queryid,
      </if>
      <if test="maillistmsg != null" >
        maillistmsg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="maillistid != null" >
        #{maillistid,jdbcType=INTEGER},
      </if>
      <if test="maillistname != null" >
        #{maillistname,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="maillisttitle != null" >
        #{maillisttitle,jdbcType=VARCHAR},
      </if>
      <if test="maillisttype != null" >
        #{maillisttype,jdbcType=VARCHAR},
      </if>
      <if test="queryid != null" >
        #{queryid,jdbcType=INTEGER},
      </if>
      <if test="maillistmsg != null" >
        #{maillistmsg,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.crm.model.XmMaillist" >
    update xm_maillist
    <set >
      <if test="maillistname != null" >
        maillistname = #{maillistname,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="maillisttitle != null" >
        maillisttitle = #{maillisttitle,jdbcType=VARCHAR},
      </if>
      <if test="maillisttype != null" >
        maillisttype = #{maillisttype,jdbcType=VARCHAR},
      </if>
      <if test="queryid != null" >
        queryid = #{queryid,jdbcType=INTEGER},
      </if>
      <if test="maillistmsg != null" >
        maillistmsg = #{maillistmsg,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where maillistid = #{maillistid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.crm.model.XmMaillist" >
    update xm_maillist
    set maillistname = #{maillistname,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      maillisttitle = #{maillisttitle,jdbcType=VARCHAR},
      maillisttype = #{maillisttype,jdbcType=VARCHAR},
      queryid = #{queryid,jdbcType=INTEGER},
      maillistmsg = #{maillistmsg,jdbcType=LONGVARCHAR}
    where maillistid = #{maillistid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.crm.model.XmMaillist" >
    update xm_maillist
    set maillistname = #{maillistname,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      maillisttitle = #{maillisttitle,jdbcType=VARCHAR},
      maillisttype = #{maillisttype,jdbcType=VARCHAR},
      queryid = #{queryid,jdbcType=INTEGER}
    where maillistid = #{maillistid,jdbcType=INTEGER}
  </update>
  <select id="getTotal" resultType="INTEGER" >
  	select count(maillistid) from xm_maillist
  </select>
  <select id="getList" resultType="com.crm.model.XmMaillist" >
  	select maillist.*,(select count(*) from xm_account2maillist where maillistid=maillist.maillistid and status=1) as sentcount,(select count(*) as unsentcount from xm_account2maillist where maillistid=maillist.maillistid and status=0) as unsentcount from xm_maillist maillist order by maillistid desc limit #{start},#{rows}
  </select>
</mapper>