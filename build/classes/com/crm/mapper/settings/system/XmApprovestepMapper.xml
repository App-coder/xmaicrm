<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.crm.mapper.settings.system.XmApprovestepMapper" >
  <resultMap id="BaseResultMap" type="com.crm.model.XmApprovestep" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="approveid" property="approveid" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="ended" property="ended" jdbcType="INTEGER" />
    <result column="isfirststep" property="isfirststep" jdbcType="INTEGER" />
    <result column="sequnce" property="sequnce" jdbcType="INTEGER" />
    <result column="nextstep" property="nextstep" jdbcType="INTEGER" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
    <result column="alterapproveowner" property="alterapproveowner" jdbcType="INTEGER" />
    <result column="user_name" property="username" jdbcType="VARCHAR" />
    <result column="nextstepname" property="nextstepname" jdbcType="VARCHAR" />
    <result column="userid" property="userid" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.crm.model.XmApprovestep" extends="BaseResultMap" >
    <result column="memo" property="memo" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, approveid, name, ended, isfirststep, sequnce, nextstep, created_at, updated_at, 
    alterapproveowner
  </sql>
  <sql id="Blob_Column_List" >
    memo
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from xm_approvestep
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from xm_approvestep
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.crm.model.XmApprovestep" >
    insert into xm_approvestep (id, approveid, name, 
      ended, isfirststep, sequnce, 
      nextstep, created_at, updated_at, 
      alterapproveowner, memo)
    values (#{id,jdbcType=INTEGER}, #{approveid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{ended,jdbcType=INTEGER}, #{isfirststep,jdbcType=INTEGER}, #{sequnce,jdbcType=INTEGER}, 
      #{nextstep,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{alterapproveowner,jdbcType=INTEGER}, #{memo,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.crm.model.XmApprovestep" >
    insert into xm_approvestep
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="approveid != null" >
        approveid,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="ended != null" >
        ended,
      </if>
      <if test="isfirststep != null" >
        isfirststep,
      </if>
      <if test="sequnce != null" >
        sequnce,
      </if>
      <if test="nextstep != null" >
        nextstep,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
      <if test="alterapproveowner != null" >
        alterapproveowner,
      </if>
      <if test="memo != null" >
        memo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="approveid != null" >
        #{approveid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="ended != null" >
        #{ended,jdbcType=INTEGER},
      </if>
      <if test="isfirststep != null" >
        #{isfirststep,jdbcType=INTEGER},
      </if>
      <if test="sequnce != null" >
        #{sequnce,jdbcType=INTEGER},
      </if>
      <if test="nextstep != null" >
        #{nextstep,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="alterapproveowner != null" >
        #{alterapproveowner,jdbcType=INTEGER},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.crm.model.XmApprovestep" >
    update xm_approvestep
    <set >
      <if test="approveid != null" >
        approveid = #{approveid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="ended != null" >
        ended = #{ended,jdbcType=INTEGER},
      </if>
      <if test="isfirststep != null" >
        isfirststep = #{isfirststep,jdbcType=INTEGER},
      </if>
      <if test="sequnce != null" >
        sequnce = #{sequnce,jdbcType=INTEGER},
      </if>
      <if test="nextstep != null" >
        nextstep = #{nextstep,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="alterapproveowner != null" >
        alterapproveowner = #{alterapproveowner,jdbcType=INTEGER},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.crm.model.XmApprovestep" >
    update xm_approvestep
    set approveid = #{approveid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      ended = #{ended,jdbcType=INTEGER},
      isfirststep = #{isfirststep,jdbcType=INTEGER},
      sequnce = #{sequnce,jdbcType=INTEGER},
      nextstep = #{nextstep,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      alterapproveowner = #{alterapproveowner,jdbcType=INTEGER},
      memo = #{memo,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.crm.model.XmApprovestep" >
    update xm_approvestep
    set approveid = #{approveid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      ended = #{ended,jdbcType=INTEGER},
      isfirststep = #{isfirststep,jdbcType=INTEGER},
      sequnce = #{sequnce,jdbcType=INTEGER},
      nextstep = #{nextstep,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      alterapproveowner = #{alterapproveowner,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getApproveNextStep" resultMap="ResultMapWithBLOBs" >
      select * from xm_approvestep t1 WHERE	t1.approveid=#{approveid} and t1.id!=#{id}
  </select>
  
  <select id="getApproveStepById" resultMap="ResultMapWithBLOBs">
     SELECT
		t1.id,t1.approveid,t1.name,t1.memo,t1.ended,t1.sequnce,t1.alterapproveowner,GROUP_CONCAT(cast(xm_step2users.userid AS char)) userid,
		GROUP_CONCAT(xm_users.user_name) user_name,IFNULL(t2.name,'æ— ') nextstepname  
	FROM
		xm_approvestep t1
	left join xm_approvestep t2 on t1.nextstep=t2.id
	LEFT JOIN xm_step2users ON t1.id = xm_step2users.stepid
	LEFT JOIN xm_users ON xm_users.id = xm_step2users.userid
	WHERE
		t1.id=#{id}
	GROUP BY t1.id
	ORDER BY 
		sequnce
  </select>
  
  <select id="getApproveStepUsers" resultType="map">
    SELECT xm_users.id,CONCAT(xm_users.user_name,'(',xm_role.rolename,')') user_name,xm_groups.groupname	
	FROM
		xm_users
	LEFT JOIN xm_users2group ON xm_users.id = xm_users2group.userid
	LEFT JOIN xm_groups ON xm_groups.groupid = xm_users2group.groupid
	left join xm_user2role on xm_users.id=xm_user2role.userid
	left join xm_role on xm_user2role.roleid=xm_role.roleid
	order by xm_groups.groupid,xm_role.rolename
  </select>
</mapper>