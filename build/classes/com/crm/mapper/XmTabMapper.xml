<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.crm.mapper.XmTabMapper" >
  <resultMap id="BaseResultMap" type="com.crm.model.XmTab" >
    <id column="tabid" property="tabid" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="presence" property="presence" jdbcType="INTEGER" />
    <result column="tabsequence" property="tabsequence" jdbcType="INTEGER" />
    <result column="tablabel" property="tablabel" jdbcType="VARCHAR" />
    <result column="modifiedby" property="modifiedby" jdbcType="INTEGER" />
    <result column="modifiedtime" property="modifiedtime" jdbcType="INTEGER" />
    <result column="customized" property="customized" jdbcType="INTEGER" />
    <result column="reportable" property="reportable" jdbcType="INTEGER" />
    <result column="permissions" property="permissions" jdbcType="INTEGER" />
    <result column="profileid" property="profileid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    tabid, name, presence, tabsequence, tablabel, modifiedby, modifiedtime, customized, 
    reportable
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from xm_tab
    where tabid = #{tabid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from xm_tab
    where tabid = #{tabid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.crm.model.XmTab" >
    insert into xm_tab (tabid, name, presence, 
      tabsequence, tablabel, modifiedby, 
      modifiedtime, customized, reportable
      )
    values (#{tabid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{presence,jdbcType=INTEGER}, 
      #{tabsequence,jdbcType=INTEGER}, #{tablabel,jdbcType=VARCHAR}, #{modifiedby,jdbcType=INTEGER}, 
      #{modifiedtime,jdbcType=INTEGER}, #{customized,jdbcType=INTEGER}, #{reportable,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.crm.model.XmTab" >
    insert into xm_tab
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tabid != null" >
        tabid,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="presence != null" >
        presence,
      </if>
      <if test="tabsequence != null" >
        tabsequence,
      </if>
      <if test="tablabel != null" >
        tablabel,
      </if>
      <if test="modifiedby != null" >
        modifiedby,
      </if>
      <if test="modifiedtime != null" >
        modifiedtime,
      </if>
      <if test="customized != null" >
        customized,
      </if>
      <if test="reportable != null" >
        reportable,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tabid != null" >
        #{tabid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="presence != null" >
        #{presence,jdbcType=INTEGER},
      </if>
      <if test="tabsequence != null" >
        #{tabsequence,jdbcType=INTEGER},
      </if>
      <if test="tablabel != null" >
        #{tablabel,jdbcType=VARCHAR},
      </if>
      <if test="modifiedby != null" >
        #{modifiedby,jdbcType=INTEGER},
      </if>
      <if test="modifiedtime != null" >
        #{modifiedtime,jdbcType=INTEGER},
      </if>
      <if test="customized != null" >
        #{customized,jdbcType=INTEGER},
      </if>
      <if test="reportable != null" >
        #{reportable,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.crm.model.XmTab" >
    update xm_tab
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="presence != null" >
        presence = #{presence,jdbcType=INTEGER},
      </if>
      <if test="tabsequence != null" >
        tabsequence = #{tabsequence,jdbcType=INTEGER},
      </if>
      <if test="tablabel != null" >
        tablabel = #{tablabel,jdbcType=VARCHAR},
      </if>
      <if test="modifiedby != null" >
        modifiedby = #{modifiedby,jdbcType=INTEGER},
      </if>
      <if test="modifiedtime != null" >
        modifiedtime = #{modifiedtime,jdbcType=INTEGER},
      </if>
      <if test="customized != null" >
        customized = #{customized,jdbcType=INTEGER},
      </if>
      <if test="reportable != null" >
        reportable = #{reportable,jdbcType=INTEGER},
      </if>
    </set>
    where tabid = #{tabid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.crm.model.XmTab" >
    update xm_tab
    set name = #{name,jdbcType=VARCHAR},
      presence = #{presence,jdbcType=INTEGER},
      tabsequence = #{tabsequence,jdbcType=INTEGER},
      tablabel = #{tablabel,jdbcType=VARCHAR},
      modifiedby = #{modifiedby,jdbcType=INTEGER},
      modifiedtime = #{modifiedtime,jdbcType=INTEGER},
      customized = #{customized,jdbcType=INTEGER},
      reportable = #{reportable,jdbcType=INTEGER}
    where tabid = #{tabid,jdbcType=INTEGER}
  </update>
  <select id="getTabByName" resultMap="BaseResultMap" >
   select 
    <include refid="Base_Column_List" />
    from xm_tab
    where name = #{tabname,jdbcType=VARCHAR}
  </select>
  <select id="getAll" resultMap="BaseResultMap" >
  	select * from xm_tab
  </select>
  <select id="getParentTabAll" resultMap="BaseResultMap" >
  	select * from xm_tab where tabid not in(1,7,24,27,29) order by tabsequence;
  </select>
  <select id="existParenttabList" resultMap="BaseResultMap" >
  	SELECT
		xm_tab.*
	FROM
		xm_parenttab
	LEFT JOIN xm_parenttabrel ON xm_parenttabrel.parenttabid = xm_parenttab.parenttabid
	LEFT JOIN xm_tab ON xm_tab.tabid = xm_parenttabrel.tabid
	WHERE
		xm_parenttab.parenttabid = #{parenttabid}
	ORDER BY
		xm_parenttabrel.sequence;
  </select>
  <select id="getExistTabids" resultType="String">
  	SELECT
		GROUP_CONCAT(cast(  xm_tab.tabid AS char )) as tabids
	FROM
		xm_parenttab
	LEFT JOIN xm_parenttabrel ON xm_parenttabrel.parenttabid = xm_parenttab.parenttabid
	LEFT JOIN xm_tab ON xm_tab.tabid = xm_parenttabrel.tabid
	WHERE
		xm_parenttab.parenttabid = #{parenttabid}
	ORDER BY
		xm_parenttabrel.sequence
  </select>
  <select id="getHiddenParenttabs" resultMap="BaseResultMap"  >
  	select xm_tab.* from xm_tab where tabid not in(1,7,24,27,29,${existtabids}) order by tabsequence;
  </select>
  <select id="getTabPermission" resultMap="BaseResultMap" >
  	select xm_tab.*,xm_profile2tab.permissions,xm_profile2tab.profileid from xm_profile2tab inner join xm_tab on xm_tab.tabid=xm_profile2tab.tabid where profileid=#{profileid};
  </select>
  <select id="getModules" resultMap="BaseResultMap" >
  	select * from xm_tab where reportable=1 order by tabid;
  </select>
  <select id="getModulesOfCustomMultiField" resultMap="BaseResultMap" >
  	select distinct xm_tab.tabid,xm_tab.`name`,xm_tab.tablabel from xm_field inner join xm_tab on xm_field.tabid=xm_tab.tabid where xm_field.tabid not in(7,9,10,29);
  </select>
  <select id="getMultiApproveModule" resultMap="BaseResultMap" >
  	select xm_tab.tabid,xm_tab.tablabel,xm_tab.name from xm_modulelist inner join xm_tab on xm_tab.tabid=xm_modulelist.tabid where xm_modulelist.type='approve' order by xm_tab.tabid;
  </select>
  <select id="getCustomsharingsModule" resultMap="BaseResultMap" >
  	select distinct xm_tab.* from xm_field inner join xm_tab on xm_field.tabid=xm_tab.tabid where xm_tab.name not in('Leads','Calendar','WU','Users','Inboundsearchs','Normaltasks','Integradedreports','Events','Products','Faq','PriceBooks','Announcements') ;
  </select>
  <select id="getDefOrgFieldModule" resultMap="BaseResultMap" >
  	select distinct xm_tab.* from xm_field inner join xm_tab on xm_field.tabid=xm_tab.tabid where xm_field.tabid not in(7,9,10,29) order by xm_field.tabid;
  </select>
  <select id="getRelatedModule"  resultMap="BaseResultMap">
  	SELECT DISTINCT
		xm_tab.*
	FROM
		xm_field
	INNER JOIN xm_tab ON xm_field.tabid = xm_tab.tabid
	WHERE
		xm_field.tabid NOT IN(7, 9, 10, 16, 15, 29);
  </select>
  
  <select id="getProductFieldModule" resultMap="BaseResultMap" >
     select xm_tab.name,xm_tab.tablabel from xm_modulelist inner join xm_tab on xm_tab.tabid=xm_modulelist.tabid where xm_modulelist.type='productfield' order by xm_tab.tabid
  </select>
  
  <select id="getRelmodField" resultMap="BaseResultMap">
     SELECT tabid,name,tablabel FROM xm_tab WHERE reportable = 1 ORDER BY tabid
  </select>
  <select id="getPermissionTab" resultMap="BaseResultMap"  >
  	SELECT DISTINCT
		(name),xm_tab.tabid,xm_tab.tablabel
	FROM
		xm_profile2field
	INNER JOIN xm_tab ON xm_tab.tabid = xm_profile2field.tabid;
  </select>
  <select id="getRecyclebinModule" resultMap="BaseResultMap">
  	SELECT DISTINCT
		`name`,
		tabid,
		tablabel
	FROM
		xm_tab
	WHERE
		reportable = 1
	AND tabid != '9'
	AND tabid NOT IN(${skipstr})
  </select>
</mapper>