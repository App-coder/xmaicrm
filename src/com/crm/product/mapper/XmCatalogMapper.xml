<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.crm.product.mapper.XmCatalogMapper" >
  <resultMap id="BaseResultMap" type="com.crm.model.XmCatalog" >
    <id column="catalogid" property="catalogid" jdbcType="VARCHAR" />
    <result column="catalogname" property="catalogname" jdbcType="VARCHAR" />
    <result column="parentcatalog" property="parentcatalog" jdbcType="VARCHAR" />
    <result column="sortorder" property="sortorder" jdbcType="INTEGER" />
    <result column="depth" property="depth" jdbcType="INTEGER" />
    <result column="parentcatalogid" property="parentcatalogid" jdbcType="VARCHAR" />
    <result column="childcount" property="sortorder" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    catalogid, catalogname, parentcatalog, sortorder, depth, parentcatalogid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from xm_catalog
    where catalogid = #{catalogid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from xm_catalog
    where catalogid = #{catalogid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.crm.model.XmCatalog" >
    insert into xm_catalog (catalogid, catalogname, parentcatalog, 
      sortorder, depth, parentcatalogid
      )
    values (#{catalogid,jdbcType=VARCHAR}, #{catalogname,jdbcType=VARCHAR}, #{parentcatalog,jdbcType=VARCHAR}, 
      #{sortorder,jdbcType=INTEGER}, #{depth,jdbcType=INTEGER}, #{parentcatalogid,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.crm.model.XmCatalog" >
    insert into xm_catalog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="catalogid != null" >
        catalogid,
      </if>
      <if test="catalogname != null" >
        catalogname,
      </if>
      <if test="parentcatalog != null" >
        parentcatalog,
      </if>
      <if test="sortorder != null" >
        sortorder,
      </if>
      <if test="depth != null" >
        depth,
      </if>
      <if test="parentcatalogid != null" >
        parentcatalogid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="catalogid != null" >
        #{catalogid,jdbcType=VARCHAR},
      </if>
      <if test="catalogname != null" >
        #{catalogname,jdbcType=VARCHAR},
      </if>
      <if test="parentcatalog != null" >
        #{parentcatalog,jdbcType=VARCHAR},
      </if>
      <if test="sortorder != null" >
        #{sortorder,jdbcType=INTEGER},
      </if>
      <if test="depth != null" >
        #{depth,jdbcType=INTEGER},
      </if>
      <if test="parentcatalogid != null" >
        #{parentcatalogid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.crm.model.XmCatalog" >
    update xm_catalog
    <set >
      <if test="catalogname != null" >
        catalogname = #{catalogname,jdbcType=VARCHAR},
      </if>
      <if test="parentcatalog != null" >
        parentcatalog = #{parentcatalog,jdbcType=VARCHAR},
      </if>
      <if test="sortorder != null" >
        sortorder = #{sortorder,jdbcType=INTEGER},
      </if>
      <if test="depth != null" >
        depth = #{depth,jdbcType=INTEGER},
      </if>
      <if test="parentcatalogid != null" >
        parentcatalogid = #{parentcatalogid,jdbcType=VARCHAR},
      </if>
    </set>
    where catalogid = #{catalogid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.crm.model.XmCatalog" >
    update xm_catalog
    set catalogname = #{catalogname,jdbcType=VARCHAR},
      parentcatalog = #{parentcatalog,jdbcType=VARCHAR},
      sortorder = #{sortorder,jdbcType=INTEGER},
      depth = #{depth,jdbcType=INTEGER},
      parentcatalogid = #{parentcatalogid,jdbcType=VARCHAR}
    where catalogid = #{catalogid,jdbcType=VARCHAR}
  </update>
  <select id="getCatalogById" resultMap="BaseResultMap" >
  	SELECT catalog.*,( SELECT 
				count(xm_catalog.catalogid) 
			FROM 
				xm_catalog 
			WHERE 
				xm_catalog.parentcatalogid = catalog.catalogid  
		) childcount 
	FROM 
		xm_catalog catalog 
	WHERE 
		catalog.parentcatalogid = #{parentid} 
	ORDER BY  
		sortorder ASC 
  </select>
</mapper>