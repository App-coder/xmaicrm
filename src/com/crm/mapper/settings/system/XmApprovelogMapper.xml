<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.crm.mapper.settings.system.XmApprovelogMapper" >
  <resultMap id="BaseResultMap" type="com.crm.model.XmApprovelog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="crmid" property="crmid" jdbcType="INTEGER" />
    <result column="approveid" property="approveid" jdbcType="INTEGER" />
    <result column="stepid" property="stepid" jdbcType="INTEGER" />
    <result column="approved_by" property="approvedBy" jdbcType="INTEGER" />
    <result column="approveresult" property="approveresult" jdbcType="INTEGER" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
    <result column="prestepid" property="prestepid" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.crm.model.XmApprovelog" extends="BaseResultMap" >
    <result column="memo" property="memo" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, crmid, approveid, stepid, approved_by, approveresult, created_at, updated_at, 
    prestepid
  </sql>
  <sql id="Blob_Column_List" >
    memo
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from xm_approvelog
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByApproveid" resultMap="BaseResultMap">
    select id,crmid from xm_approvelog where approveresult=0 and approveid=#{approveid}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from xm_approvelog
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.crm.model.XmApprovelog" >
    insert into xm_approvelog (id, crmid, approveid, 
      stepid, approved_by, approveresult, 
      created_at, updated_at, prestepid, 
      memo)
    values (#{id,jdbcType=INTEGER}, #{crmid,jdbcType=INTEGER}, #{approveid,jdbcType=INTEGER}, 
      #{stepid,jdbcType=INTEGER}, #{approvedBy,jdbcType=INTEGER}, #{approveresult,jdbcType=INTEGER}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, #{prestepid,jdbcType=INTEGER}, 
      #{memo,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.crm.model.XmApprovelog" >
    insert into xm_approvelog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="crmid != null" >
        crmid,
      </if>
      <if test="approveid != null" >
        approveid,
      </if>
      <if test="stepid != null" >
        stepid,
      </if>
      <if test="approvedBy != null" >
        approved_by,
      </if>
      <if test="approveresult != null" >
        approveresult,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
      <if test="prestepid != null" >
        prestepid,
      </if>
      <if test="memo != null" >
        memo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="crmid != null" >
        #{crmid,jdbcType=INTEGER},
      </if>
      <if test="approveid != null" >
        #{approveid,jdbcType=INTEGER},
      </if>
      <if test="stepid != null" >
        #{stepid,jdbcType=INTEGER},
      </if>
      <if test="approvedBy != null" >
        #{approvedBy,jdbcType=INTEGER},
      </if>
      <if test="approveresult != null" >
        #{approveresult,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="prestepid != null" >
        #{prestepid,jdbcType=INTEGER},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.crm.model.XmApprovelog" >
    update xm_approvelog
    <set >
      <if test="crmid != null" >
        crmid = #{crmid,jdbcType=INTEGER},
      </if>
      <if test="approveid != null" >
        approveid = #{approveid,jdbcType=INTEGER},
      </if>
      <if test="stepid != null" >
        stepid = #{stepid,jdbcType=INTEGER},
      </if>
      <if test="approvedBy != null" >
        approved_by = #{approvedBy,jdbcType=INTEGER},
      </if>
      <if test="approveresult != null" >
        approveresult = #{approveresult,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="prestepid != null" >
        prestepid = #{prestepid,jdbcType=INTEGER},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <update id="updateByApproveid">
     update xm_approvelog set approveresult=4,approved_by=#{userid} where approveresult=0 and approveid=#{approveid} 
  </update>
  
  <update id="updateApproveRefuse">
     update xm_approvelog set approveresult=2,approved_by=#{userid},updated_at=#{nowtime} where id=#{logid} 
  </update>
  <update id="updateModuleRelRefuse">
     update ${tablename} set approved=0 where ${fieldid}=#{crmid}
  </update>
  
  
  
  <update id="updateModuleRel">
    update ${tablename} set approved=1,approvedby=#{userid} where approved in (0,-3) 
    and ${fieldid} in (select distinct crmid from ec_approvelog where approveid=#{approveid} and approveresult=4)
  </update>
  
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.crm.model.XmApprovelog" >
    update xm_approvelog
    set crmid = #{crmid,jdbcType=INTEGER},
      approveid = #{approveid,jdbcType=INTEGER},
      stepid = #{stepid,jdbcType=INTEGER},
      approved_by = #{approvedBy,jdbcType=INTEGER},
      approveresult = #{approveresult,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      prestepid = #{prestepid,jdbcType=INTEGER},
      memo = #{memo,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.crm.model.XmApprovelog" >
    update xm_approvelog
    set crmid = #{crmid,jdbcType=INTEGER},
      approveid = #{approveid,jdbcType=INTEGER},
      stepid = #{stepid,jdbcType=INTEGER},
      approved_by = #{approvedBy,jdbcType=INTEGER},
      approveresult = #{approveresult,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      prestepid = #{prestepid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getApproveUsed" resultType="Integer">
    SELECT count(xm_approvelog.crmid) crmid
	FROM
		xm_approvelog
	INNER JOIN ${tablename} ON xm_approvelog.crmid = ${tablename}.${fieldid}
	WHERE
		approveid = #{approveid} and ${tablename}.deleted=0 and ${tablename}.approved!=1 
  </select>
  
  <select id="getApproveStatus" resultType="map">
     SELECT
        xm_approvelog.approveid,xm_approvelog.stepid,xm_approvelog.crmid,xm_approve.name approvename,xm_approvestep.name approvestepname,
        xm_users.user_name,xm_approvelog.approveresult,xm_approvelog.memo,xm_approvelog.updated_at,
        crmentity.setype,crmentity.pre
	FROM
		xm_approvelog
	INNER JOIN (${subquery})AS crmentity ON xm_approvelog.crmid = crmentity.crmid
	LEFT JOIN xm_approve ON xm_approve.id = xm_approvelog.approveid
	LEFT JOIN(
		xm_approvestep
		INNER JOIN xm_step2users ON xm_approvestep.id = xm_step2users.stepid
		AND xm_step2users.userid = #{userid}) on xm_approvelog.stepid=xm_approvestep.id left join xm_users on xm_users.id=xm_approvelog.approved_by ${where} order by xm_approvelog.updated_at desc limit #{start},#{rows}
  </select>
  
  <select id="getApproveStatusTotal" resultType="Integer">
    select count(*) total FROM xm_approvelog inner join (${subquery}) as crmentity on xm_approvelog.crmid=crmentity.crmid left join xm_approve on xm_approve.id=xm_approvelog.approveid left join (xm_approvestep  inner join xm_step2users on xm_approvestep.id=xm_step2users.stepid and xm_step2users.userid=#{userid}) on xm_approvelog.stepid=xm_approvestep.id left join xm_users on xm_users.id=xm_approvelog.approved_by ${where}
  </select>
  
</mapper>