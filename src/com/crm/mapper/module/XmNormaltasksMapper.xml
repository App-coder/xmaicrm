<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.crm.mapper.module.XmNormaltasksMapper" >
  <resultMap id="BaseResultMap" type="com.crm.model.XmNormaltasks" >
    <id column="normaltasksid" property="normaltasksid" jdbcType="INTEGER" />
    <result column="normaltaskname" property="normaltaskname" jdbcType="VARCHAR" />
    <result column="accountid" property="accountid" jdbcType="INTEGER" />
    <result column="noteplansid" property="noteplansid" jdbcType="INTEGER" />
    <result column="taskstatus" property="taskstatus" jdbcType="INTEGER" />
    <result column="transferto" property="transferto" jdbcType="INTEGER" />
    <result column="smcreatorid" property="smcreatorid" jdbcType="INTEGER" />
    <result column="smownerid" property="smownerid" jdbcType="INTEGER" />
    <result column="modifiedby" property="modifiedby" jdbcType="INTEGER" />
    <result column="groupid" property="groupid" jdbcType="INTEGER" />
    <result column="createdtime" property="createdtime" jdbcType="TIMESTAMP" />
    <result column="modifiedtime" property="modifiedtime" jdbcType="TIMESTAMP" />
    <result column="deleted" property="deleted" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.crm.model.XmNormaltasks" extends="BaseResultMap" >
    <result column="description" property="description" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    normaltasksid, normaltaskname, accountid, noteplansid, taskstatus, transferto, smcreatorid, 
    smownerid, modifiedby, groupid, createdtime, modifiedtime, deleted
  </sql>
  <sql id="Blob_Column_List" >
    description
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from xm_normaltasks
    where normaltasksid = #{normaltasksid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from xm_normaltasks
    where normaltasksid = #{normaltasksid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.crm.model.XmNormaltasks" >
    insert into xm_normaltasks (normaltasksid, normaltaskname, accountid, 
      noteplansid, taskstatus, transferto, 
      smcreatorid, smownerid, modifiedby, 
      groupid, createdtime, modifiedtime, 
      deleted, description)
    values (#{normaltasksid,jdbcType=INTEGER}, #{normaltaskname,jdbcType=VARCHAR}, #{accountid,jdbcType=INTEGER}, 
      #{noteplansid,jdbcType=INTEGER}, #{taskstatus,jdbcType=INTEGER}, #{transferto,jdbcType=INTEGER}, 
      #{smcreatorid,jdbcType=INTEGER}, #{smownerid,jdbcType=INTEGER}, #{modifiedby,jdbcType=INTEGER}, 
      #{groupid,jdbcType=INTEGER}, #{createdtime,jdbcType=TIMESTAMP}, #{modifiedtime,jdbcType=TIMESTAMP}, 
      #{deleted,jdbcType=INTEGER}, #{description,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.crm.model.XmNormaltasks" >
    insert into xm_normaltasks
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="normaltasksid != null" >
        normaltasksid,
      </if>
      <if test="normaltaskname != null" >
        normaltaskname,
      </if>
      <if test="accountid != null" >
        accountid,
      </if>
      <if test="noteplansid != null" >
        noteplansid,
      </if>
      <if test="taskstatus != null" >
        taskstatus,
      </if>
      <if test="transferto != null" >
        transferto,
      </if>
      <if test="smcreatorid != null" >
        smcreatorid,
      </if>
      <if test="smownerid != null" >
        smownerid,
      </if>
      <if test="modifiedby != null" >
        modifiedby,
      </if>
      <if test="groupid != null" >
        groupid,
      </if>
      <if test="createdtime != null" >
        createdtime,
      </if>
      <if test="modifiedtime != null" >
        modifiedtime,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="normaltasksid != null" >
        #{normaltasksid,jdbcType=INTEGER},
      </if>
      <if test="normaltaskname != null" >
        #{normaltaskname,jdbcType=VARCHAR},
      </if>
      <if test="accountid != null" >
        #{accountid,jdbcType=INTEGER},
      </if>
      <if test="noteplansid != null" >
        #{noteplansid,jdbcType=INTEGER},
      </if>
      <if test="taskstatus != null" >
        #{taskstatus,jdbcType=INTEGER},
      </if>
      <if test="transferto != null" >
        #{transferto,jdbcType=INTEGER},
      </if>
      <if test="smcreatorid != null" >
        #{smcreatorid,jdbcType=INTEGER},
      </if>
      <if test="smownerid != null" >
        #{smownerid,jdbcType=INTEGER},
      </if>
      <if test="modifiedby != null" >
        #{modifiedby,jdbcType=INTEGER},
      </if>
      <if test="groupid != null" >
        #{groupid,jdbcType=INTEGER},
      </if>
      <if test="createdtime != null" >
        #{createdtime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedtime != null" >
        #{modifiedtime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.crm.model.XmNormaltasks" >
    update xm_normaltasks
    <set >
      <if test="normaltaskname != null" >
        normaltaskname = #{normaltaskname,jdbcType=VARCHAR},
      </if>
      <if test="accountid != null" >
        accountid = #{accountid,jdbcType=INTEGER},
      </if>
      <if test="noteplansid != null" >
        noteplansid = #{noteplansid,jdbcType=INTEGER},
      </if>
      <if test="taskstatus != null" >
        taskstatus = #{taskstatus,jdbcType=INTEGER},
      </if>
      <if test="transferto != null" >
        transferto = #{transferto,jdbcType=INTEGER},
      </if>
      <if test="smcreatorid != null" >
        smcreatorid = #{smcreatorid,jdbcType=INTEGER},
      </if>
      <if test="smownerid != null" >
        smownerid = #{smownerid,jdbcType=INTEGER},
      </if>
      <if test="modifiedby != null" >
        modifiedby = #{modifiedby,jdbcType=INTEGER},
      </if>
      <if test="groupid != null" >
        groupid = #{groupid,jdbcType=INTEGER},
      </if>
      <if test="createdtime != null" >
        createdtime = #{createdtime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedtime != null" >
        modifiedtime = #{modifiedtime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where normaltasksid = #{normaltasksid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.crm.model.XmNormaltasks" >
    update xm_normaltasks
    set normaltaskname = #{normaltaskname,jdbcType=VARCHAR},
      accountid = #{accountid,jdbcType=INTEGER},
      noteplansid = #{noteplansid,jdbcType=INTEGER},
      taskstatus = #{taskstatus,jdbcType=INTEGER},
      transferto = #{transferto,jdbcType=INTEGER},
      smcreatorid = #{smcreatorid,jdbcType=INTEGER},
      smownerid = #{smownerid,jdbcType=INTEGER},
      modifiedby = #{modifiedby,jdbcType=INTEGER},
      groupid = #{groupid,jdbcType=INTEGER},
      createdtime = #{createdtime,jdbcType=TIMESTAMP},
      modifiedtime = #{modifiedtime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=INTEGER},
      description = #{description,jdbcType=LONGVARCHAR}
    where normaltasksid = #{normaltasksid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.crm.model.XmNormaltasks" >
    update xm_normaltasks
    set normaltaskname = #{normaltaskname,jdbcType=VARCHAR},
      accountid = #{accountid,jdbcType=INTEGER},
      noteplansid = #{noteplansid,jdbcType=INTEGER},
      taskstatus = #{taskstatus,jdbcType=INTEGER},
      transferto = #{transferto,jdbcType=INTEGER},
      smcreatorid = #{smcreatorid,jdbcType=INTEGER},
      smownerid = #{smownerid,jdbcType=INTEGER},
      modifiedby = #{modifiedby,jdbcType=INTEGER},
      groupid = #{groupid,jdbcType=INTEGER},
      createdtime = #{createdtime,jdbcType=TIMESTAMP},
      modifiedtime = #{modifiedtime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=INTEGER}
    where normaltasksid = #{normaltasksid,jdbcType=INTEGER}
  </update>
  <select id="getCountByStatus" resultType="Integer">
  	SELECT
		count(xm_normaltasks.noteplansid) 
	FROM
		xm_normaltasks
	INNER JOIN xm_account ON xm_normaltasks.accountid = xm_account.accountid
	LEFT JOIN xm_users ON xm_users.id = xm_normaltasks.smownerid
	LEFT JOIN xm_noteplans ON xm_noteplans.noteplansid = xm_normaltasks.noteplansid
	WHERE
		xm_normaltasks.deleted = 0
	AND xm_normaltasks.smownerid !=- 1
	AND xm_noteplans.planstatus IN('处理中', '已完成')
	AND xm_normaltasks.taskstatus = #{i};
  </select>
  <select id="getCountOfOverTime" resultType="Integer">
  	SELECT
		count(xm_normaltasks.noteplansid)
	FROM
		xm_normaltasks
	INNER JOIN xm_account ON xm_normaltasks.accountid = xm_account.accountid
	LEFT JOIN xm_users ON xm_users.id = xm_normaltasks.smownerid
	LEFT JOIN xm_noteplans ON xm_noteplans.noteplansid = xm_normaltasks.noteplansid
	WHERE
		xm_normaltasks.deleted = 0
	AND xm_normaltasks.smownerid !=- 1
	AND xm_noteplans.planstatus IN('处理中', '已完成')
	AND(
		xm_noteplans.enddate <![CDATA[<]]> '${enddate}'
		AND(
			xm_normaltasks.taskstatus = 3
			OR xm_normaltasks.taskstatus = 2
			OR xm_normaltasks.taskstatus = 0
		)
	);
  </select>
  <select id="loadListOverTime" resultType="map">
  	SELECT
		xm_account.accountname,
		(
			SELECT
				noteplanname
			FROM
				xm_noteplans
			WHERE
				noteplansid = xm_normaltasks.noteplansid
			LIMIT 0,
			1
		)noteplanname,
		xm_noteplans.planstatus,
		xm_noteplans.startdate,
		xm_noteplans.enddate,
		'未处理' as taskstatus,
		xm_users.last_name AS ownername,
		(select xm_users.last_name from xm_users where xm_users.id = xm_normaltasks.smcreatorid) as creator,
		xm_normaltasks.modifiedtime  
	FROM
		xm_normaltasks
	INNER JOIN xm_account ON xm_normaltasks.accountid = xm_account.accountid
	LEFT JOIN xm_users ON xm_users.id = xm_normaltasks.smownerid
	LEFT JOIN xm_noteplans ON xm_noteplans.noteplansid = xm_normaltasks.noteplansid
	WHERE
		xm_normaltasks.deleted = 0
	AND xm_normaltasks.smownerid !=- 1
	AND xm_noteplans.planstatus IN('处理中', '已完成')
	AND(
		xm_noteplans.enddate <![CDATA[<]]> '${enddate}'
		AND(
			xm_normaltasks.taskstatus = 3
			OR xm_normaltasks.taskstatus = 2
			OR xm_normaltasks.taskstatus = 0
		)
	);
  </select>
  <select id="getCountOfOutTimeFinished" resultType="Integer">
  	SELECT
		count(1)AS count
	FROM
		xm_normaltasks
	INNER JOIN xm_account ON xm_normaltasks.accountid = xm_account.accountid
	LEFT JOIN xm_users ON xm_users.id = xm_normaltasks.smownerid
	LEFT JOIN xm_noteplans ON xm_noteplans.noteplansid = xm_normaltasks.noteplansid
	WHERE
		xm_normaltasks.deleted = 0
	AND xm_normaltasks.smownerid !=- 1
	AND xm_noteplans.planstatus IN('处理中', '已完成')
	AND(
		(
			xm_noteplans.enddate <![CDATA[<]]> xm_normaltasks.modifiedtime
		)
		AND xm_normaltasks.taskstatus = 1
	);
  </select>
  <select id="getCountOfRollOut" resultType="Integer">
  	SELECT
		count(xm_normaltasks.noteplansid) 
	FROM
		xm_normaltasks
	INNER JOIN xm_account ON xm_normaltasks.accountid = xm_account.accountid
	LEFT JOIN xm_users ON xm_users.id = xm_normaltasks.smownerid
	LEFT JOIN xm_noteplans ON xm_noteplans.noteplansid = xm_normaltasks.noteplansid
	WHERE
		xm_normaltasks.deleted = 0
	AND xm_normaltasks.smownerid !=-1 
	AND xm_noteplans.planstatus IN('处理中', '已完成')
	AND xm_normaltasks.taskstatus = 4
	ORDER BY
		xm_normaltasks.modifiedtime ASC;
  </select>
  <select id="loadListNotDo" resultType="map">
	SELECT
		xm_account.accountname,
		(
			SELECT
				noteplanname
			FROM
				xm_noteplans
			WHERE
				noteplansid = xm_normaltasks.noteplansid
			LIMIT 0,
			1
		)noteplanname,
		xm_noteplans.planstatus,
		xm_noteplans.startdate,
		xm_noteplans.enddate,
		'未处理' as taskstatus,
		xm_users.last_name AS ownername,
		(select xm_users.last_name from xm_users where xm_users.id = xm_normaltasks.smcreatorid) as creator,
		xm_normaltasks.modifiedtime  
	FROM
		xm_normaltasks
	INNER JOIN xm_account ON xm_normaltasks.accountid = xm_account.accountid
	LEFT JOIN xm_users ON xm_users.id = xm_normaltasks.smownerid
	LEFT JOIN xm_noteplans ON xm_noteplans.noteplansid = xm_normaltasks.noteplansid
	WHERE
		xm_normaltasks.deleted = 0
	AND xm_normaltasks.smownerid !=- 1
	AND xm_noteplans.planstatus IN('处理中', '已完成')
	AND xm_normaltasks.taskstatus = 0
	limit #{start},#{rows}
  </select>
  <select id="loadListFollow" resultType="map">
  	SELECT
		xm_account.accountname,
		(
			SELECT
				noteplanname
			FROM
				xm_noteplans
			WHERE
				noteplansid = xm_normaltasks.noteplansid
			LIMIT 0,
			1
		)noteplanname,
		xm_noteplans.planstatus,
		xm_noteplans.startdate,
		xm_noteplans.enddate,
		'跟进中' as taskstatus,
		xm_users.last_name AS ownername,
		(select xm_users.last_name from xm_users where xm_users.id = xm_normaltasks.smcreatorid) as creator,
		xm_normaltasks.modifiedtime  
	FROM
		xm_normaltasks
	INNER JOIN xm_account ON xm_normaltasks.accountid = xm_account.accountid
	LEFT JOIN xm_users ON xm_users.id = xm_normaltasks.smownerid
	LEFT JOIN xm_noteplans ON xm_noteplans.noteplansid = xm_normaltasks.noteplansid
	WHERE
		xm_normaltasks.deleted = 0
	AND xm_normaltasks.smownerid !=- 1
	AND xm_noteplans.planstatus IN('处理中', '已完成')
	AND xm_normaltasks.taskstatus = 2
	limit #{start},#{rows}
  </select>
  <select id="loadListChange" resultType="map" >
  	SELECT
		xm_account.accountname,
		(
			SELECT
				noteplanname
			FROM
				xm_noteplans
			WHERE
				noteplansid = xm_normaltasks.noteplansid
			LIMIT 0,
			1
		)noteplanname,
		xm_noteplans.planstatus,
		xm_noteplans.startdate,
		xm_noteplans.enddate,
		'转入' as taskstatus,
		xm_users.last_name AS ownername,
		(select xm_users.last_name from xm_users where xm_users.id = xm_normaltasks.smcreatorid) as creator,
		xm_normaltasks.modifiedtime  
	FROM
		xm_normaltasks
	INNER JOIN xm_account ON xm_normaltasks.accountid = xm_account.accountid
	LEFT JOIN xm_users ON xm_users.id = xm_normaltasks.smownerid
	LEFT JOIN xm_noteplans ON xm_noteplans.noteplansid = xm_normaltasks.noteplansid
	WHERE
		xm_normaltasks.deleted = 0
	AND xm_normaltasks.smownerid !=- 1
	AND xm_noteplans.planstatus IN('处理中', '已完成')
	AND xm_normaltasks.taskstatus = 3
	limit #{start},#{rows}  	
  </select>
  <select id="loadListFinished" resultType="map">
  	SELECT
		xm_account.accountname,
		(
			SELECT
				noteplanname
			FROM
				xm_noteplans
			WHERE
				noteplansid = xm_normaltasks.noteplansid
			LIMIT 0,
			1
		)noteplanname,
		xm_noteplans.planstatus,
		xm_noteplans.startdate,
		xm_noteplans.enddate,
		'已经完成' as taskstatus,
		xm_users.last_name AS ownername,
		(select xm_users.last_name from xm_users where xm_users.id = xm_normaltasks.smcreatorid) as creator,
		xm_normaltasks.modifiedtime  
	FROM
		xm_normaltasks
	INNER JOIN xm_account ON xm_normaltasks.accountid = xm_account.accountid
	LEFT JOIN xm_users ON xm_users.id = xm_normaltasks.smownerid
	LEFT JOIN xm_noteplans ON xm_noteplans.noteplansid = xm_normaltasks.noteplansid
	WHERE
		xm_normaltasks.deleted = 0
	AND xm_normaltasks.smownerid !=- 1
	AND xm_noteplans.planstatus IN('处理中', '已完成')
	AND xm_normaltasks.taskstatus = 1
	limit #{start},#{rows}  	  	
  </select>
  <select id="loadListOutTimeFinished" resultType="map" >
  	SELECT
		xm_account.accountname,
		(
			SELECT
				noteplanname
			FROM
				xm_noteplans
			WHERE
				noteplansid = xm_normaltasks.noteplansid
			LIMIT 0,
			1
		)noteplanname,
		xm_noteplans.planstatus,
		xm_noteplans.startdate,
		xm_noteplans.enddate,
		'过期完成' as taskstatus,
		xm_users.last_name AS ownername,
		(select xm_users.last_name from xm_users where xm_users.id = xm_normaltasks.smcreatorid) as creator,
		xm_normaltasks.modifiedtime 
	FROM
		xm_normaltasks
	INNER JOIN xm_account ON xm_normaltasks.accountid = xm_account.accountid
	LEFT JOIN xm_users ON xm_users.id = xm_normaltasks.smownerid
	LEFT JOIN xm_noteplans ON xm_noteplans.noteplansid = xm_normaltasks.noteplansid
	WHERE
		xm_normaltasks.deleted = 0
	AND xm_normaltasks.smownerid !=- 1
	AND xm_noteplans.planstatus IN('处理中', '已完成')
	AND(
		(
			xm_noteplans.enddate <![CDATA[<]]> xm_normaltasks.modifiedtime
		)
		AND xm_normaltasks.taskstatus = 1
	);
  </select>
  <select id="loadListRollOut" resultType="map">
  	SELECT
		xm_account.accountname,
		(
			SELECT
				noteplanname
			FROM
				xm_noteplans
			WHERE
				noteplansid = xm_normaltasks.noteplansid
			LIMIT 0,
			1
		)noteplanname,
		xm_noteplans.planstatus,
		xm_noteplans.startdate,
		xm_noteplans.enddate,
		'转出' as taskstatus,
		xm_users.last_name AS ownername,
		(select xm_users.last_name from xm_users where xm_users.id = xm_normaltasks.smcreatorid) as creator,
		xm_normaltasks.modifiedtime 
	FROM
		xm_normaltasks
	INNER JOIN xm_account ON xm_normaltasks.accountid = xm_account.accountid
	LEFT JOIN xm_users ON xm_users.id = xm_normaltasks.smownerid
	LEFT JOIN xm_noteplans ON xm_noteplans.noteplansid = xm_normaltasks.noteplansid
	WHERE
		xm_normaltasks.deleted = 0
	AND xm_normaltasks.smownerid !=-1 
	AND xm_noteplans.planstatus IN('处理中', '已完成')
	AND xm_normaltasks.taskstatus = 4
	ORDER BY
		xm_normaltasks.modifiedtime ASC;
  </select>
</mapper>